{"ast":null,"code":"var _jsxFileName = \"/Users/christian/thoughts/src/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect } from 'react'; // import { MDXProvider } from '@mdx-js/react';\n\nimport { Global, css } from '@emotion/core'; // import { DefaultSeo } from 'next-seo';\n\nimport { ThemeProvider, CSSReset, ColorModeProvider, useColorMode } from '@chakra-ui/core';\nimport Head from 'next/head';\nimport theme from '../../public/styles/theme';\nimport { prismLightTheme, prismDarkTheme } from '../../public/styles/prism';\nimport \"../../public/styles/global.css\"; // import MDXComponents from '../components/MDXComponents';\n// import SEO from '../next-seo.config';\n\nconst GlobalStyle = ({\n  children,\n  content\n}) => {\n  const {\n    colorMode\n  } = useColorMode();\n  return __jsx(React.Fragment, null, __jsx(CSSReset, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), __jsx(Global, {\n    styles: css`\n          ${colorMode === 'light' ? prismLightTheme : prismDarkTheme};\n          ::selection {\n            background-color: #47a3f3;\n            color: #fefefe;\n          }\n          html {\n            min-width: 360px;\n            scroll-behavior: smooth;\n          }\n          #__next {\n            display: flex;\n            flex-direction: column;\n            min-height: 100vh;\n            background: ${colorMode === 'light' ? 'white' : '#171923'};\n          }\n        `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), children, content);\n}; // Router.events.on('routeChangeComplete', () => {\n//   Fathom.trackPageview();\n// });\n\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  useEffect(() => {\n    if (false) {\n      Fathom.load(process.env.NEXT_PUBLIC_FATHOM_SITE_ID, {\n        includedDomains: ['leerob.io']\n      });\n    }\n  }, []);\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(ColorModeProvider, {\n    value: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(\"meta\", {\n    content: \"IE=edge\",\n    httpEquiv: \"X-UA-Compatible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }), __jsx(\"meta\", {\n    content: \"width=device-width, initial-scale=1\",\n    name: \"viewport\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), __jsx(\"meta\", {\n    content: \"#ffffff\",\n    name: \"theme-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }), __jsx(\"meta\", {\n    content: \"#ffffff\",\n    name: \"msapplication-TileColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), __jsx(\"meta\", {\n    content: \"/static/favicons/browserconfig.xml\",\n    name: \"msapplication-config\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), __jsx(\"meta\", {\n    content: \"14d2e73487fa6c71\",\n    name: \"yandex-verification\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }), __jsx(\"meta\", {\n    content: \"eZSdmzAXlLkKhNJzfgwDqWORghxnJ8qR9_CHdAh5-xw\",\n    name: \"google-site-verification\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  })), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/christian/thoughts/src/pages/_app.tsx"],"names":["React","useEffect","Global","css","ThemeProvider","CSSReset","ColorModeProvider","useColorMode","Head","theme","prismLightTheme","prismDarkTheme","GlobalStyle","children","content","colorMode","App","Component","pageProps","Fathom","load","process","env","NEXT_PUBLIC_FATHOM_SITE_ID","includedDomains"],"mappings":";;;;;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,eAA5B,C,CACA;;AACA,SACEC,aADF,EAEEC,QAFF,EAGEC,iBAHF,EAIEC,YAJF,QAKO,iBALP;AAOA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,2BAAhD;AAEA,OAAO,gCAAP,C,CACA;AACA;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAgBR,YAAY,EAAlC;AAEA,SACE,4BACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AACE,IAAA,MAAM,EAAEJ,GAAI;YACRY,SAAS,KAAK,OAAd,GAAwBL,eAAxB,GAA0CC,cAAe;;;;;;;;;;;;;0BAa3CI,SAAS,KAAK,OAAd,GAAwB,OAAxB,GAAkC,SAAU;;SAfhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAqBGF,QArBH,EAsBGC,OAtBH,CADF;AA0BD,CA7BD,C,CA+BA;AACA;AACA;;;AAEA,MAAME,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AACxCjB,EAAAA,SAAS,CAAC,MAAM;AACd,eAA2C;AACzCkB,MAAAA,MAAM,CAACC,IAAP,CAAYC,OAAO,CAACC,GAAR,CAAYC,0BAAxB,EAAoD;AAClDC,QAAAA,eAAe,EAAE,CAAC,WAAD;AADiC,OAApD;AAGD;AACF,GANQ,EAMN,EANM,CAAT;AAQA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEf,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,OAAO,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AACE,IAAA,OAAO,EAAC,qCADV;AAEE,IAAA,IAAI,EAAC,UAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME;AAAM,IAAA,OAAO,EAAC,SAAd;AAAwB,IAAA,IAAI,EAAC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAM,IAAA,OAAO,EAAC,SAAd;AAAwB,IAAA,IAAI,EAAC,yBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AACE,IAAA,OAAO,EAAC,oCADV;AAEE,IAAA,IAAI,EAAC,sBAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAYE;AAAM,IAAA,OAAO,EAAC,kBAAd;AAAiC,IAAA,IAAI,EAAC,qBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE;AACE,IAAA,OAAO,EAAC,6CADV;AAEE,IAAA,IAAI,EAAC,0BAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,EAoBE,MAAC,SAAD,eAAeS,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KApBF,CADF,CAFJ,CADF;AA8BD,CAvCD;;AAyCA,eAAeF,GAAf","sourcesContent":["\n\n\nimport React, { useEffect } from 'react';\n// import { MDXProvider } from '@mdx-js/react';\nimport { Global, css } from '@emotion/core';\n// import { DefaultSeo } from 'next-seo';\nimport {\n  ThemeProvider,\n  CSSReset,\n  ColorModeProvider,\n  useColorMode\n} from '@chakra-ui/core';\nimport Router from 'next/router';\nimport Head from 'next/head';\n\n\nimport theme from '../../public/styles/theme';\nimport { prismLightTheme, prismDarkTheme } from '../../public/styles/prism';\n\nimport \"../../public/styles/global.css\";\n// import MDXComponents from '../components/MDXComponents';\n// import SEO from '../next-seo.config';\n\n\nconst GlobalStyle = ({ children, content }) => {\n  const { colorMode } = useColorMode();\n\n  return (\n    <>\n      <CSSReset />\n      <Global\n        styles={css`\n          ${colorMode === 'light' ? prismLightTheme : prismDarkTheme};\n          ::selection {\n            background-color: #47a3f3;\n            color: #fefefe;\n          }\n          html {\n            min-width: 360px;\n            scroll-behavior: smooth;\n          }\n          #__next {\n            display: flex;\n            flex-direction: column;\n            min-height: 100vh;\n            background: ${colorMode === 'light' ? 'white' : '#171923'};\n          }\n        `}\n      />\n      {children}\n      {content}\n    </>\n  );\n};\n\n// Router.events.on('routeChangeComplete', () => {\n//   Fathom.trackPageview();\n// });\n\nconst App = ({ Component, pageProps }) => {\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      Fathom.load(process.env.NEXT_PUBLIC_FATHOM_SITE_ID, {\n        includedDomains: ['leerob.io']\n      });\n    }\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      {/* <MDXProvider components={MDXComponents}> */}\n        <ColorModeProvider value=\"light\">\n          <GlobalStyle>\n            <Head>\n              <meta content=\"IE=edge\" httpEquiv=\"X-UA-Compatible\" />\n              <meta\n                content=\"width=device-width, initial-scale=1\"\n                name=\"viewport\"\n              />\n              <meta content=\"#ffffff\" name=\"theme-color\" />\n              <meta content=\"#ffffff\" name=\"msapplication-TileColor\" />\n              <meta\n                content=\"/static/favicons/browserconfig.xml\"\n                name=\"msapplication-config\"\n              />\n              <meta content=\"14d2e73487fa6c71\" name=\"yandex-verification\" />\n              <meta\n                content=\"eZSdmzAXlLkKhNJzfgwDqWORghxnJ8qR9_CHdAh5-xw\"\n                name=\"google-site-verification\"\n              />\n            </Head>\n            {/* <DefaultSeo {...SEO} /> */}\n            <Component {...pageProps} />\n          </GlobalStyle>\n        </ColorModeProvider>\n      {/* </MDXProvider> */}\n    </ThemeProvider>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}