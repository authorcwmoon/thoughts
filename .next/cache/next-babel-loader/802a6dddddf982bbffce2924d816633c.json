{"ast":null,"code":"import React from 'react';\n\nconst ViewCounter = fn => class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = Object.assign({\n      db: null,\n      views: null,\n      postId: null\n    }, props);\n    this.onViews = this.onViews.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.db == null) {\n      const postId = getPostId();\n      import(\"../lib/db\").then(({\n        default: db_\n      }) => {\n        const db = db_();\n        this.setState({\n          db,\n          postId\n        });\n        db.ref(\"views\").child(postId).on(\"value\", this.onViews);\n      }).catch(err => {\n        console.error(err);\n        console.log(\"firebase failed to load\");\n      });\n\n      if (false) {\n        fetch(`/api/view?id=${encodeURIComponent(postId)}`).then(res => res.json()).then(({\n          total,\n          error\n        }) => {\n          if (error) {\n            console.error(\"View save error:\", error);\n          } else {\n            console.info(\"View saved. Total views:\", total);\n          }\n        }).catch(err => {\n          console.error(\"View store error\", err);\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.db) {\n      this.state.db.ref(\"views\").child(this.state.postId).off(\"value\", this.onViews);\n    }\n  }\n\n  onViews(views) {\n    this.setState({\n      views: views.val()\n    });\n  }\n\n  render() {\n    return fn(this.state);\n  }\n\n};\n\nfunction getPostId() {\n  return window.location.pathname.substr(1).replace(/(\\d+)\\//, \"$1-\");\n}\n\nexport default ViewCounter;","map":{"version":3,"sources":["/Users/christian/thoughts/src/components/ViewCounter.tsx"],"names":["React","ViewCounter","fn","Component","constructor","props","state","Object","assign","db","views","postId","onViews","bind","componentDidMount","getPostId","then","default","db_","setState","ref","child","on","catch","err","console","error","log","fetch","encodeURIComponent","res","json","total","info","componentWillUnmount","off","val","render","window","location","pathname","substr","replace"],"mappings":"AAAA,OAAOA,KAAP,MAA2C,OAA3C;;AAgBA,MAAMC,WAAW,GAAGC,EAAE,IACpB,cAAcF,KAAK,CAACG,SAApB,CAA8B;AAC5BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAaC,MAAM,CAACC,MAAP,CACX;AACEC,MAAAA,EAAE,EAAE,IADN;AAEEC,MAAAA,KAAK,EAAE,IAFT;AAGEC,MAAAA,MAAM,EAAE;AAHV,KADW,EAMXN,KANW,CAAb;AAQA,SAAKO,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKR,KAAL,CAAWG,EAAX,IAAiB,IAArB,EAA2B;AACzB,YAAME,MAAM,GAAGI,SAAS,EAAxB;AAEA,aAAO,WAAP,EACGC,IADH,CACQ,CAAC;AAAEC,QAAAA,OAAO,EAAEC;AAAX,OAAD,KAAsB;AAC1B,cAAMT,EAAE,GAAGS,GAAG,EAAd;AACA,aAAKC,QAAL,CAAc;AAAEV,UAAAA,EAAF;AAAME,UAAAA;AAAN,SAAd;AACAF,QAAAA,EAAE,CAACW,GAAH,CAAO,OAAP,EAAgBC,KAAhB,CAAsBV,MAAtB,EAA8BW,EAA9B,CAAiC,OAAjC,EAA0C,KAAKV,OAA/C;AACD,OALH,EAMGW,KANH,CAMSC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAC,QAAAA,OAAO,CAACE,GAAR,CAAY,yBAAZ;AACD,OATH;;AAWA,iBAA2C;AACzCC,QAAAA,KAAK,CAAE,gBAAeC,kBAAkB,CAAClB,MAAD,CAAS,EAA5C,CAAL,CACGK,IADH,CACQc,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGf,IAFH,CAEQ,CAAC;AAAEgB,UAAAA,KAAF;AAASN,UAAAA;AAAT,SAAD,KAAsB;AAC1B,cAAIA,KAAJ,EAAW;AACTD,YAAAA,OAAO,CAACC,KAAR,CAAc,kBAAd,EAAkCA,KAAlC;AACD,WAFD,MAEO;AACLD,YAAAA,OAAO,CAACQ,IAAR,CAAa,0BAAb,EAAyCD,KAAzC;AACD;AACF,SARH,EASGT,KATH,CASSC,GAAG,IAAI;AACZC,UAAAA,OAAO,CAACC,KAAR,CAAc,kBAAd,EAAkCF,GAAlC;AACD,SAXH;AAYD;AACF;AACF;;AAEDU,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAK5B,KAAL,CAAWG,EAAf,EAAmB;AACjB,WAAKH,KAAL,CAAWG,EAAX,CACGW,GADH,CACO,OADP,EAEGC,KAFH,CAES,KAAKf,KAAL,CAAWK,MAFpB,EAGGwB,GAHH,CAGO,OAHP,EAGgB,KAAKvB,OAHrB;AAID;AACF;;AAEDA,EAAAA,OAAO,CAACF,KAAD,EAAQ;AACb,SAAKS,QAAL,CAAc;AAAET,MAAAA,KAAK,EAAEA,KAAK,CAAC0B,GAAN;AAAT,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAOnC,EAAE,CAAC,KAAKI,KAAN,CAAT;AACD;;AA7D2B,CADhC;;AAiEA,SAASS,SAAT,GAAqB;AACnB,SAAOuB,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,MAAzB,CAAgC,CAAhC,EAAmCC,OAAnC,CAA2C,SAA3C,EAAsD,KAAtD,CAAP;AACD;;AAED,eAAezC,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport format from 'comma-number';\nimport {\n  Heading,\n  InputGroup,\n  Box,\n  Input,\n  InputRightElement,\n  Button,\n  Text,\n  useToast,\n  useColorMode,\n  Flex\n} from '@chakra-ui/core';\n\n\nconst ViewCounter = fn =>\n  class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = Object.assign(\n        {\n          db: null,\n          views: null,\n          postId: null,\n        },\n        props\n      );\n      this.onViews = this.onViews.bind(this);\n    }\n\n    componentDidMount() {\n      if (this.state.db == null) {\n        const postId = getPostId();\n\n        import(\"../lib/db\")\n          .then(({ default: db_ }) => {\n            const db = db_();\n            this.setState({ db, postId });\n            db.ref(\"views\").child(postId).on(\"value\", this.onViews);\n          })\n          .catch(err => {\n            console.error(err);\n            console.log(\"firebase failed to load\");\n          });\n\n        if (process.env.NODE_ENV === \"production\") {\n          fetch(`/api/view?id=${encodeURIComponent(postId)}`)\n            .then(res => res.json())\n            .then(({ total, error }) => {\n              if (error) {\n                console.error(\"View save error:\", error);\n              } else {\n                console.info(\"View saved. Total views:\", total);\n              }\n            })\n            .catch(err => {\n              console.error(\"View store error\", err);\n            });\n        }\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.state.db) {\n        this.state.db\n          .ref(\"views\")\n          .child(this.state.postId)\n          .off(\"value\", this.onViews);\n      }\n    }\n\n    onViews(views) {\n      this.setState({ views: views.val() });\n    }\n\n    render() {\n      return fn(this.state);\n    }\n  };\n\nfunction getPostId() {\n  return window.location.pathname.substr(1).replace(/(\\d+)\\//, \"$1-\");\n}\n\nexport default ViewCounter;"]},"metadata":{},"sourceType":"module"}