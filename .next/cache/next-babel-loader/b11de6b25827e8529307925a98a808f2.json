{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport { Heading, InputGroup, Box, Input, InputRightElement, Button, Text, useToast, useColorMode } from '@chakra-ui/core';\n\nvar Subscribe = function Subscribe() {\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var inputEl = useRef(null);\n  var toast = useToast();\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var bgColor = {\n    light: 'yellow.50',\n    dark: 'blue.400'\n  };\n  var borderColor = {\n    light: 'yellow.200',\n    dark: 'white.100'\n  };\n\n  var subscribe = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res, _yield$res$json, error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setLoading(true);\n              _context.next = 4;\n              return fetch('/.netlify/functions/subscribe', {\n                body: JSON.stringify({\n                  email: inputEl.current.value\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                method: 'POST'\n              });\n\n            case 4:\n              res = _context.sent;\n              setLoading(false);\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              _yield$res$json = _context.sent;\n              error = _yield$res$json.error;\n\n              if (!error) {\n                _context.next = 13;\n                break;\n              }\n\n              toast({\n                title: 'An error occurred.',\n                description: error,\n                status: 'error',\n                duration: 3000,\n                isClosable: true\n              });\n              return _context.abrupt(\"return\");\n\n            case 13:\n              // trackGoal('JYFUFMSF', 0);\n              // inputEl.current.value = '';\n              toast({\n                title: 'Success!',\n                description: 'You are now subscribed.',\n                status: 'success',\n                duration: 3000,\n                isClosable: true\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function subscribe(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Box, {\n    border: \"1px solid\",\n    borderColor: borderColor[colorMode],\n    bg: bgColor[colorMode],\n    borderRadius: 4,\n    padding: 6,\n    my: 4,\n    alignSelf: \"center\"\n  }, __jsx(Heading, {\n    as: \"h5\",\n    size: \"lg\",\n    mb: 2\n  }, \"Read my journal.\"), __jsx(Text, null, \"Susbscribe for regular updates on my character's adventures\"), \"across space and time.\", __jsx(InputGroup, {\n    size: \"md\",\n    mt: 4\n  }, __jsx(Input, {\n    \"aria-label\": \"Email for newsletter\",\n    placeholder: \"friend@gmail.com\",\n    ref: inputEl,\n    type: \"email\"\n  }), __jsx(InputRightElement, {\n    width: \"6.75rem\"\n  }, __jsx(Button, {\n    isLoading: loading,\n    fontWeight: \"bold\",\n    h: \"1.75rem\",\n    size: \"sm\",\n    onClick: subscribe\n  }, \"Subscribe\"))));\n};\n\nexport default Subscribe;","map":null,"metadata":{},"sourceType":"module"}