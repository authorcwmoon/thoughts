{"ast":null,"code":"var _jsxFileName = \"/Users/christian/thoughts/src/components/MDXComponents.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/** @jsx jsx */\nimport { Box, Callout, Code, Heading, Kbd, Link, PseudoBox, Text, Divider, useColorMode } from '@chakra-ui/core';\nimport { jsx } from '@emotion/core';\nimport NextLink from 'next/link';\n\nconst Table = props => jsx(Box, {\n  overflowX: \"scroll\",\n  w: \"full\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, jsx(Box, _extends({\n  as: \"table\",\n  textAlign: \"left\",\n  mt: \"32px\",\n  w: \"full\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }\n})));\n\nconst THead = props => {\n  const {\n    colorMode\n  } = useColorMode();\n  const bg = {\n    light: 'gray.50',\n    dark: 'whiteAlpha.100'\n  };\n  return jsx(Box, _extends({\n    as: \"th\",\n    bg: bg[colorMode],\n    fontWeight: \"semibold\",\n    p: 2,\n    fontSize: \"sm\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst TData = props => jsx(Box, _extends({\n  as: \"td\",\n  p: 2,\n  borderTopWidth: \"1px\",\n  borderColor: \"inherit\",\n  fontSize: \"sm\",\n  whiteSpace: \"normal\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }\n}));\n\nconst CustomLink = props => {\n  const {\n    colorMode\n  } = useColorMode();\n  const color = {\n    light: 'hsl(208, 99%, 44%)',\n    dark: 'hsl(208, 95%, 68%)'\n  };\n  const href = props.href;\n  const isInternalLink = href && (href.startsWith('/') || href.startsWith('#'));\n\n  if (isInternalLink) {\n    return jsx(NextLink, {\n      href: href,\n      passHref: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, jsx(Link, _extends({\n      color: color[colorMode]\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return jsx(Link, _extends({\n    color: color[colorMode],\n    isExternal: true\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }\n  }));\n};\n\nconst Quote = props => {\n  const {\n    colorMode\n  } = useColorMode();\n  const bgColor = {\n    light: 'blue.50',\n    dark: 'blue.900'\n  };\n  return jsx(Callout, _extends({\n    mt: 4,\n    w: \"98%\",\n    bg: bgColor[colorMode],\n    variant: \"left-accent\",\n    status: \"info\",\n    css: {\n      '> *:first-of-type': {\n        marginTop: 0,\n        marginLeft: 8\n      }\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst DocsHeading = props => jsx(Heading, _extends({\n  css: {\n    scrollMarginTop: '100px',\n    scrollSnapMargin: '100px',\n    // Safari\n    '&[id]': {\n      pointerEvents: 'none'\n    },\n    '&[id]:before': {\n      display: 'block',\n      height: ' 6rem',\n      marginTop: '-6rem',\n      visibility: 'hidden',\n      content: `\"\"`\n    },\n    '&[id]:hover a': {\n      opacity: 1\n    }\n  }\n}, props, {\n  mb: \"1em\",\n  mt: \"2em\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }\n}), jsx(Box, {\n  pointerEvents: \"auto\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 7\n  }\n}, props.children, props.id && jsx(PseudoBox, {\n  \"aria-label\": \"anchor\",\n  as: \"a\",\n  color: \"blue.500\",\n  fontWeight: \"normal\",\n  outline: \"none\",\n  _focus: {\n    opacity: 1,\n    boxShadow: 'outline'\n  } // opacity=\"0\"\n  ,\n  ml: \"0.375rem\" // href={`#${props.id}`}\n  ,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 11\n  }\n}, \"#\")));\n\nconst Hr = () => {\n  const {\n    colorMode\n  } = useColorMode();\n  const borderColor = {\n    light: 'gray.200',\n    dark: 'gray.600'\n  };\n  return jsx(Divider, {\n    borderColor: borderColor[colorMode],\n    my: 4,\n    w: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 12\n    }\n  });\n};\n\nconst MDXComponents = {\n  h1: props => jsx(Heading, _extends({\n    as: \"h1\",\n    size: \"xl\",\n    my: 4\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 20\n    }\n  })),\n  h2: props => jsx(DocsHeading, _extends({\n    as: \"h2\",\n    fontWeight: \"bold\",\n    size: \"lg\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 20\n    }\n  })),\n  h3: props => jsx(DocsHeading, _extends({\n    as: \"h3\",\n    size: \"md\",\n    fontWeight: \"bold\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 20\n    }\n  })),\n  inlineCode: props => jsx(Code, _extends({\n    variantColor: \"yellow\",\n    fontSize: \"0.84em\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  })),\n  kbd: Kbd,\n  br: props => jsx(Box, _extends({\n    height: \"24px\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 20\n    }\n  })),\n  hr: Hr,\n  table: Table,\n  th: THead,\n  td: TData,\n  a: CustomLink,\n  p: props => jsx(Text, _extends({\n    as: \"p\",\n    mt: 4,\n    lineHeight: \"tall\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  })),\n  ul: props => jsx(Box, _extends({\n    as: \"ul\",\n    pt: 2,\n    pl: 4,\n    ml: 2\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 20\n    }\n  })),\n  ol: props => jsx(Box, _extends({\n    as: \"ol\",\n    pt: 2,\n    pl: 4,\n    ml: 2\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 20\n    }\n  })),\n  li: props => jsx(Box, _extends({\n    as: \"li\",\n    pb: 1\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 20\n    }\n  })),\n  blockquote: Quote\n};\nexport { CustomLink };\nexport default MDXComponents;","map":{"version":3,"sources":["/Users/christian/thoughts/src/components/MDXComponents.tsx"],"names":["Box","Callout","Code","Heading","Kbd","Link","PseudoBox","Text","Divider","useColorMode","jsx","NextLink","Table","props","THead","colorMode","bg","light","dark","TData","CustomLink","color","href","isInternalLink","startsWith","Quote","bgColor","marginTop","marginLeft","DocsHeading","scrollMarginTop","scrollSnapMargin","pointerEvents","display","height","visibility","content","opacity","children","id","boxShadow","Hr","borderColor","MDXComponents","h1","h2","h3","inlineCode","kbd","br","hr","table","th","td","a","p","ul","ol","li","blockquote"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport {\n    Box,\n    Callout,\n    Code,\n    Heading,\n    Kbd,\n    Link,\n    PseudoBox,\n    Text,\n    Divider,\n    useColorMode\n  } from '@chakra-ui/core';\n  import { jsx } from '@emotion/core';\n  import NextLink from 'next/link';\n  \n  const Table = (props) => (\n    <Box overflowX=\"scroll\" w=\"full\">\n      <Box as=\"table\" textAlign=\"left\" mt=\"32px\" w=\"full\" {...props} />\n    </Box>\n  );\n  \n  const THead = (props) => {\n    const { colorMode } = useColorMode();\n    const bg = {\n      light: 'gray.50',\n      dark: 'whiteAlpha.100'\n    };\n  \n    return (\n      <Box\n        as=\"th\"\n        bg={bg[colorMode]}\n        fontWeight=\"semibold\"\n        p={2}\n        fontSize=\"sm\"\n        {...props}\n      />\n    );\n  };\n  \n  const TData = (props) => (\n    <Box\n      as=\"td\"\n      p={2}\n      borderTopWidth=\"1px\"\n      borderColor=\"inherit\"\n      fontSize=\"sm\"\n      whiteSpace=\"normal\"\n      {...props}\n    />\n  );\n  \n  const CustomLink = (props) => {\n    const { colorMode } = useColorMode();\n    const color = {\n      light: 'hsl(208, 99%, 44%)',\n      dark: 'hsl(208, 95%, 68%)'\n    };\n  \n    const href = props.href;\n    const isInternalLink = href && (href.startsWith('/') || href.startsWith('#'));\n  \n    if (isInternalLink) {\n      return (\n        <NextLink href={href} passHref>\n          <Link color={color[colorMode]} {...props} />\n        </NextLink>\n      );\n    }\n  \n    return <Link color={color[colorMode]} isExternal {...props} />;\n  };\n  \n  const Quote = (props) => {\n    const { colorMode } = useColorMode();\n    const bgColor = {\n      light: 'blue.50',\n      dark: 'blue.900'\n    };\n  \n    return (\n      <Callout\n        mt={4}\n        w=\"98%\"\n        bg={bgColor[colorMode]}\n        variant=\"left-accent\"\n        status=\"info\"\n        css={{\n          '> *:first-of-type': {\n            marginTop: 0,\n            marginLeft: 8\n          }\n        }}\n        {...props}\n      />\n    );\n  };\n  \n  const DocsHeading = (props) => (\n    <Heading\n      css={{\n        scrollMarginTop: '100px',\n        scrollSnapMargin: '100px', // Safari\n        '&[id]': {\n          pointerEvents: 'none'\n        },\n        '&[id]:before': {\n          display: 'block',\n          height: ' 6rem',\n          marginTop: '-6rem',\n          visibility: 'hidden',\n          content: `\"\"`\n        },\n        '&[id]:hover a': { opacity: 1 }\n      }}\n      {...props}\n      mb=\"1em\"\n      mt=\"2em\"\n    >\n      <Box pointerEvents=\"auto\">\n        {props.children}\n        {props.id && (\n          <PseudoBox\n            aria-label=\"anchor\"\n            as=\"a\"\n            color=\"blue.500\"\n            fontWeight=\"normal\"\n            outline=\"none\"\n            _focus={{\n              opacity: 1,\n              boxShadow: 'outline'\n            }}\n            // opacity=\"0\"\n            ml=\"0.375rem\"\n            // href={`#${props.id}`}\n          >\n            #\n          </PseudoBox>\n        )}\n      </Box>\n    </Heading>\n  );\n  \n  const Hr = () => {\n    const { colorMode } = useColorMode();\n    const borderColor = {\n      light: 'gray.200',\n      dark: 'gray.600'\n    };\n  \n    return <Divider borderColor={borderColor[colorMode]} my={4} w=\"100%\" />;\n  };\n  \n  const MDXComponents = {\n    h1: (props) => <Heading as=\"h1\" size=\"xl\" my={4} {...props} />,\n    h2: (props) => <DocsHeading as=\"h2\" fontWeight=\"bold\" size=\"lg\" {...props} />,\n    h3: (props) => <DocsHeading as=\"h3\" size=\"md\" fontWeight=\"bold\" {...props} />,\n    inlineCode: (props) => (\n      <Code variantColor=\"yellow\" fontSize=\"0.84em\" {...props} />\n    ),\n    kbd: Kbd,\n    br: (props) => <Box height=\"24px\" {...props} />,\n    hr: Hr,\n    table: Table,\n    th: THead,\n    td: TData,\n    a: CustomLink,\n    p: (props) => <Text as=\"p\" mt={4} lineHeight=\"tall\" {...props} />,\n    ul: (props) => <Box as=\"ul\" pt={2} pl={4} ml={2} {...props} />,\n    ol: (props) => <Box as=\"ol\" pt={2} pl={4} ml={2} {...props} />,\n    li: (props) => <Box as=\"li\" pb={1} {...props} />,\n    blockquote: Quote\n  };\n  \n  export { CustomLink };\n  export default MDXComponents;"]},"metadata":{},"sourceType":"module"}