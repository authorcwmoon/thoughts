{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport format from 'comma-number';\nimport loadDb from '../lib/db';\n\nconst ViewCounter = ({\n  id\n}) => {\n  const {\n    0: views,\n    1: setViews\n  } = useState('');\n  useEffect(() => {\n    const onViews = newViews => setViews(newViews.val());\n\n    let db;\n\n    const fetchData = async () => {\n      db = await loadDb();\n      db.child(id).on('value', onViews);\n    };\n\n    fetchData();\n    return () => {\n      if (db) {\n        db.child(id).off('value', onViews);\n      }\n    };\n  }, [id]);\n  useEffect(() => {\n    const registerView = () => fetch(`/api/increment-views?id=${encodeURIComponent(id)}`);\n\n    registerView();\n  }, [id]);\n  return `${views ? format(views) : '–––'} views`;\n};\n\nexport default ViewCounter;","map":{"version":3,"sources":["/Users/christian/thoughts/src/components/ViewCounter.js"],"names":["useState","useEffect","format","loadDb","ViewCounter","id","views","setViews","onViews","newViews","val","db","fetchData","child","on","off","registerView","fetch","encodeURIComponent"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAC9B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,OAAO,GAAIC,QAAD,IAAcF,QAAQ,CAACE,QAAQ,CAACC,GAAT,EAAD,CAAtC;;AACA,QAAIC,EAAJ;;AAEA,UAAMC,SAAS,GAAG,YAAY;AAC5BD,MAAAA,EAAE,GAAG,MAAMR,MAAM,EAAjB;AACAQ,MAAAA,EAAE,CAACE,KAAH,CAASR,EAAT,EAAaS,EAAb,CAAgB,OAAhB,EAAyBN,OAAzB;AACD,KAHD;;AAKAI,IAAAA,SAAS;AAET,WAAO,MAAM;AACX,UAAID,EAAJ,EAAQ;AACNA,QAAAA,EAAE,CAACE,KAAH,CAASR,EAAT,EAAaU,GAAb,CAAiB,OAAjB,EAA0BP,OAA1B;AACD;AACF,KAJD;AAKD,GAhBQ,EAgBN,CAACH,EAAD,CAhBM,CAAT;AAkBAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,YAAY,GAAG,MACnBC,KAAK,CAAE,2BAA0BC,kBAAkB,CAACb,EAAD,CAAK,EAAnD,CADP;;AAGAW,IAAAA,YAAY;AACb,GALQ,EAKN,CAACX,EAAD,CALM,CAAT;AAOA,SAAQ,GAAEC,KAAK,GAAGJ,MAAM,CAACI,KAAD,CAAT,GAAmB,KAAM,QAAxC;AACD,CA7BD;;AA+BA,eAAeF,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport format from 'comma-number';\n\nimport loadDb from '../lib/db';\n\nconst ViewCounter = ({ id }) => {\n  const [views, setViews] = useState('');\n\n  useEffect(() => {\n    const onViews = (newViews) => setViews(newViews.val());\n    let db;\n\n    const fetchData = async () => {\n      db = await loadDb();\n      db.child(id).on('value', onViews);\n    };\n\n    fetchData();\n\n    return () => {\n      if (db) {\n        db.child(id).off('value', onViews);\n      }\n    };\n  }, [id]);\n\n  useEffect(() => {\n    const registerView = () =>\n      fetch(`/api/increment-views?id=${encodeURIComponent(id)}`);\n\n    registerView();\n  }, [id]);\n\n  return `${views ? format(views) : '–––'} views`;\n};\n\nexport default ViewCounter;"]},"metadata":{},"sourceType":"module"}