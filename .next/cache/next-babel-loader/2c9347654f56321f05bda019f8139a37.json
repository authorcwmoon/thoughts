{"ast":null,"code":"var _jsxFileName = \"/Users/christian/thoughts/src/layouts/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Author from \"../components/Author\";\nimport Copyright from \"../components/Copyright\";\nimport Layout from \"../components/Layout\";\nimport BasicMeta from \"../components/meta/BasicMeta\";\nimport JsonLdMeta from \"../components/meta/JsonLdMeta\";\nimport OpenGraphMeta from \"../components/meta/OpenGraphMeta\";\nimport TwitterCardMeta from \"../components/meta/TwitterCardMeta\";\nimport { SocialList } from \"../components/SocialList\";\nimport TagButton from \"../components/TagButton\";\nimport { getAuthor } from \"../lib/authors\";\nimport { getTag } from \"../lib/tags\";\nimport { Heading, Text, Flex, Stack, Avatar } from '@chakra-ui/core';\nimport { format } from 'date-fns';\nexport default function Index(_ref) {\n  var _this = this;\n\n  var title = _ref.title,\n      date = _ref.date,\n      slug = _ref.slug,\n      author = _ref.author,\n      tags = _ref.tags,\n      description = _ref.description;\n  var keywords = tags.map(function (it) {\n    return getTag(it).name;\n  });\n  var authorName = getAuthor(author).name;\n  return function (_ref2) {\n    var content = _ref2.children;\n    return __jsx(Layout, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, __jsx(BasicMeta, {\n      url: \"/posts/\".concat(slug),\n      title: title,\n      keywords: keywords,\n      description: description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), __jsx(TwitterCardMeta, {\n      url: \"/posts/\".concat(slug),\n      title: title,\n      description: description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), __jsx(OpenGraphMeta, {\n      url: \"/posts/\".concat(slug),\n      title: title,\n      description: description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), __jsx(JsonLdMeta, {\n      url: \"/posts/\".concat(slug),\n      title: title,\n      keywords: keywords,\n      date: date,\n      author: authorName,\n      description: description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, __jsx(Stack, {\n      as: \"article\",\n      spacing: 8,\n      justifyContent: \"center\",\n      alignItems: \"flex-start\",\n      m: \"0 auto 4rem auto\",\n      maxWidth: \"700px\",\n      w: \"100%\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, __jsx(Flex, {\n      flexDirection: \"column\",\n      justifyContent: \"flex-start\",\n      alignItems: \"flex-start\",\n      maxWidth: \"700px\",\n      w: \"100%\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, __jsx(Heading, {\n      letterSpacing: \"tight\",\n      mb: 2,\n      as: \"h1\",\n      size: \"2xl\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 12\n      }\n    }, title), __jsx(Flex, {\n      justify: \"space-between\",\n      align: ['initial', 'center'],\n      direction: ['column', 'row'],\n      mt: 2,\n      w: \"100%\",\n      mb: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, __jsx(Flex, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, __jsx(Avatar, {\n      size: \"xs\",\n      name: \"C.W. Moon\",\n      src: \"https://bit.ly/34WFAj1\",\n      mr: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }), __jsx(Text, {\n      fontSize: \"sm\",\n      color: \"fafafa\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 16\n      }\n    }, __jsx(Author, {\n      author: getAuthor(author),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 16\n      }\n    }), \" / \", format(new Date(), 'MMMM dd, yyyy'))))), content, __jsx(\"article\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, __jsx(\"ul\", {\n      className: \"tag-list\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, tags.map(function (it, i) {\n      return __jsx(\"li\", {\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, __jsx(TagButton, {\n        tag: getTag(it),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }));\n    })))), __jsx(\"footer\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"social-list\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, __jsx(SocialList, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    })), __jsx(Copyright, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }))));\n  };\n}\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/christian/thoughts/src/layouts/index.tsx"],"names":["React","Author","Copyright","Layout","BasicMeta","JsonLdMeta","OpenGraphMeta","TwitterCardMeta","SocialList","TagButton","getAuthor","getTag","Heading","Text","Flex","Stack","Avatar","format","Index","title","date","slug","author","tags","description","keywords","map","it","name","authorName","content","children","Date","i"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport React from \"react\";\nimport styles from \"../../public/styles/content.module.css\";\nimport Author from \"../components/Author\";\nimport Copyright from \"../components/Copyright\";\nimport Layout from \"../components/Layout\";\nimport BasicMeta from \"../components/meta/BasicMeta\";\nimport JsonLdMeta from \"../components/meta/JsonLdMeta\";\nimport OpenGraphMeta from \"../components/meta/OpenGraphMeta\";\nimport TwitterCardMeta from \"../components/meta/TwitterCardMeta\";\nimport { SocialList } from \"../components/SocialList\";\nimport TagButton from \"../components/TagButton\";\nimport { getAuthor } from \"../lib/authors\";\nimport { getTag } from \"../lib/tags\";\nimport {\n  useColorMode,\n  Heading,\n  Text,\n  Flex,\n  Stack,\n  Avatar,\n  Link,\n  Box\n} from '@chakra-ui/core';\nimport IframeResizer from 'iframe-resizer-react';\nimport { parseISO, format } from 'date-fns';\n\n\n\n\n\ntype Props = {\n  title: string;\n  date: Date;\n  slug: string;\n  description: string;\n  tags: string[];\n  author: string;\n};\nexport default function Index({\n  title,\n  date,\n  slug,\n  author,\n  tags,\n  description,\n}: Props) {\n  const keywords = tags.map((it) => getTag(it).name);\n  const authorName = getAuthor(author).name;\n\n\n  return ({ children: content }) => {\n    return (\n      <Layout>\n        <BasicMeta\n          url={`/posts/${slug}`}\n          title={title}\n          keywords={keywords}\n          description={description}\n        />\n        <TwitterCardMeta\n          url={`/posts/${slug}`}\n          title={title}\n          description={description}\n        />\n        <OpenGraphMeta\n          url={`/posts/${slug}`}\n          title={title}\n          description={description}\n        />\n        <JsonLdMeta\n          url={`/posts/${slug}`}\n          title={title}\n          keywords={keywords}\n          date={date}\n          author={authorName}\n          description={description}\n        />\n       \n        <div className={\"container\"}>\n\n        <Stack\n        as=\"article\"\n        spacing={8}\n        justifyContent=\"center\"\n        alignItems=\"flex-start\"\n        m=\"0 auto 4rem auto\"\n        maxWidth=\"700px\"\n        w=\"100%\"\n      >\n        <Flex\n          flexDirection=\"column\"\n          justifyContent=\"flex-start\"\n          alignItems=\"flex-start\"\n          maxWidth=\"700px\"\n          w=\"100%\"\n        >\n           <Heading letterSpacing=\"tight\" mb={2} as=\"h1\" size=\"2xl\">\n            {title}\n          </Heading>\n          <Flex\n            justify=\"space-between\"\n            align={['initial', 'center']}\n            direction={['column', 'row']}\n            mt={2}\n            w=\"100%\"\n            mb={4}\n          >\n            <Flex align=\"center\">\n              <Avatar\n                size=\"xs\"\n                name=\"C.W. Moon\"\n                src=\"https://bit.ly/34WFAj1\"\n                mr={2}\n              />\n               <Text fontSize=\"sm\" color=\"fafafa\">\n               <Author author={getAuthor(author)} />\n               {` / `}\n               {format(new Date(), 'MMMM dd, yyyy')}\n              </Text>\n            </Flex>\n            </Flex>\n            </Flex>\n            {content}\n          <article>\n            <ul className={\"tag-list\"}>\n              {tags.map((it, i) => (\n                <li key={i}>\n                  <TagButton tag={getTag(it)} />\n                </li>\n              ))}\n            </ul>\n          </article>\n          </Stack>\n          <footer>\n            <div className={\"social-list\"}>\n              <SocialList />\n            </div>\n            <Copyright />\n          </footer>\n        </div>\n       \n      </Layout>\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}