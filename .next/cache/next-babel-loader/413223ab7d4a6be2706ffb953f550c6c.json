{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\n\nvar ViewCounter = function ViewCounter(fn) {\n  return /*#__PURE__*/function (_React$Component) {\n    _inherits(_class, _React$Component);\n\n    var _super = _createSuper(_class);\n\n    function _class(props) {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      _this = _super.call(this, props);\n      _this.state = Object.assign({\n        db: null,\n        views: null,\n        postId: null\n      }, props);\n      _this.onViews = _this.onViews.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    _createClass(_class, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        if (this.state.db == null) {\n          var postId = getPostId();\n          import(\"../lib/db\").then(function (_ref) {\n            var db_ = _ref[\"default\"];\n            var db = db_();\n\n            _this2.setState({\n              db: db,\n              postId: postId\n            });\n\n            db.ref(\"views\").child(postId).on(\"value\", _this2.onViews);\n          })[\"catch\"](function (err) {\n            console.error(err);\n            console.log(\"firebase failed to load\");\n          });\n\n          if (false) {\n            fetch(\"/api/view?id=\".concat(encodeURIComponent(postId))).then(function (res) {\n              return res.json();\n            }).then(function (_ref2) {\n              var total = _ref2.total,\n                  error = _ref2.error;\n\n              if (error) {\n                console.error(\"View save error:\", error);\n              } else {\n                console.info(\"View saved. Total views:\", total);\n              }\n            })[\"catch\"](function (err) {\n              console.error(\"View store error\", err);\n            });\n          }\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        if (this.state.db) {\n          this.state.db.ref(\"views\").child(this.state.postId).off(\"value\", this.onViews);\n        }\n      }\n    }, {\n      key: \"onViews\",\n      value: function onViews(views) {\n        this.setState({\n          views: views.val()\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return fn(this.state);\n      }\n    }]);\n\n    return _class;\n  }(React.Component);\n};\n\n_c = ViewCounter;\n\nfunction getPostId() {\n  return window.location.pathname.substr(1).replace(/(\\d+)\\//, \"$1-\");\n}\n\nexport default ViewCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewCounter\");","map":{"version":3,"sources":["/Users/christian/thoughts/src/components/ViewCounter.tsx"],"names":["React","ViewCounter","fn","props","state","Object","assign","db","views","postId","onViews","bind","getPostId","then","db_","setState","ref","child","on","err","console","error","log","fetch","encodeURIComponent","res","json","total","info","off","val","Component","window","location","pathname","substr","replace"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;;AAgBA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,EAAE;AAAA;AAAA;;AAAA;;AAElB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gCAAMA,KAAN;AACA,YAAKC,KAAL,GAAaC,MAAM,CAACC,MAAP,CACX;AACEC,QAAAA,EAAE,EAAE,IADN;AAEEC,QAAAA,KAAK,EAAE,IAFT;AAGEC,QAAAA,MAAM,EAAE;AAHV,OADW,EAMXN,KANW,CAAb;AAQA,YAAKO,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf;AAViB;AAWlB;;AAbiB;AAAA;AAAA,0CAeE;AAAA;;AAClB,YAAI,KAAKP,KAAL,CAAWG,EAAX,IAAiB,IAArB,EAA2B;AACzB,cAAME,MAAM,GAAGG,SAAS,EAAxB;AAEA,iBAAO,WAAP,EACGC,IADH,CACQ,gBAAsB;AAAA,gBAAVC,GAAU;AAC1B,gBAAMP,EAAE,GAAGO,GAAG,EAAd;;AACA,YAAA,MAAI,CAACC,QAAL,CAAc;AAAER,cAAAA,EAAE,EAAFA,EAAF;AAAME,cAAAA,MAAM,EAANA;AAAN,aAAd;;AACAF,YAAAA,EAAE,CAACS,GAAH,CAAO,OAAP,EAAgBC,KAAhB,CAAsBR,MAAtB,EAA8BS,EAA9B,CAAiC,OAAjC,EAA0C,MAAI,CAACR,OAA/C;AACD,WALH,WAMS,UAAAS,GAAG,EAAI;AACZC,YAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAC,YAAAA,OAAO,CAACE,GAAR,CAAY,yBAAZ;AACD,WATH;;AAWA,qBAA2C;AACzCC,YAAAA,KAAK,wBAAiBC,kBAAkB,CAACf,MAAD,CAAnC,EAAL,CACGI,IADH,CACQ,UAAAY,GAAG;AAAA,qBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,aADX,EAEGb,IAFH,CAEQ,iBAAsB;AAAA,kBAAnBc,KAAmB,SAAnBA,KAAmB;AAAA,kBAAZN,KAAY,SAAZA,KAAY;;AAC1B,kBAAIA,KAAJ,EAAW;AACTD,gBAAAA,OAAO,CAACC,KAAR,CAAc,kBAAd,EAAkCA,KAAlC;AACD,eAFD,MAEO;AACLD,gBAAAA,OAAO,CAACQ,IAAR,CAAa,0BAAb,EAAyCD,KAAzC;AACD;AACF,aARH,WASS,UAAAR,GAAG,EAAI;AACZC,cAAAA,OAAO,CAACC,KAAR,CAAc,kBAAd,EAAkCF,GAAlC;AACD,aAXH;AAYD;AACF;AACF;AA7CiB;AAAA;AAAA,6CA+CK;AACrB,YAAI,KAAKf,KAAL,CAAWG,EAAf,EAAmB;AACjB,eAAKH,KAAL,CAAWG,EAAX,CACGS,GADH,CACO,OADP,EAEGC,KAFH,CAES,KAAKb,KAAL,CAAWK,MAFpB,EAGGoB,GAHH,CAGO,OAHP,EAGgB,KAAKnB,OAHrB;AAID;AACF;AAtDiB;AAAA;AAAA,8BAwDVF,KAxDU,EAwDH;AACb,aAAKO,QAAL,CAAc;AAAEP,UAAAA,KAAK,EAAEA,KAAK,CAACsB,GAAN;AAAT,SAAd;AACD;AA1DiB;AAAA;AAAA,+BA4DT;AACP,eAAO5B,EAAE,CAAC,KAAKE,KAAN,CAAT;AACD;AA9DiB;;AAAA;AAAA,IACNJ,KAAK,CAAC+B,SADA;AAAA,CAAtB;;KAAM9B,W;;AAiEN,SAASW,SAAT,GAAqB;AACnB,SAAOoB,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,MAAzB,CAAgC,CAAhC,EAAmCC,OAAnC,CAA2C,SAA3C,EAAsD,KAAtD,CAAP;AACD;;AAED,eAAenC,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport format from 'comma-number';\nimport {\n  Heading,\n  InputGroup,\n  Box,\n  Input,\n  InputRightElement,\n  Button,\n  Text,\n  useToast,\n  useColorMode,\n  Flex\n} from '@chakra-ui/core';\n\n\nconst ViewCounter = fn =>\n  class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = Object.assign(\n        {\n          db: null,\n          views: null,\n          postId: null,\n        },\n        props\n      );\n      this.onViews = this.onViews.bind(this);\n    }\n\n    componentDidMount() {\n      if (this.state.db == null) {\n        const postId = getPostId();\n\n        import(\"../lib/db\")\n          .then(({ default: db_ }) => {\n            const db = db_();\n            this.setState({ db, postId });\n            db.ref(\"views\").child(postId).on(\"value\", this.onViews);\n          })\n          .catch(err => {\n            console.error(err);\n            console.log(\"firebase failed to load\");\n          });\n\n        if (process.env.NODE_ENV === \"production\") {\n          fetch(`/api/view?id=${encodeURIComponent(postId)}`)\n            .then(res => res.json())\n            .then(({ total, error }) => {\n              if (error) {\n                console.error(\"View save error:\", error);\n              } else {\n                console.info(\"View saved. Total views:\", total);\n              }\n            })\n            .catch(err => {\n              console.error(\"View store error\", err);\n            });\n        }\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.state.db) {\n        this.state.db\n          .ref(\"views\")\n          .child(this.state.postId)\n          .off(\"value\", this.onViews);\n      }\n    }\n\n    onViews(views) {\n      this.setState({ views: views.val() });\n    }\n\n    render() {\n      return fn(this.state);\n    }\n  };\n\nfunction getPostId() {\n  return window.location.pathname.substr(1).replace(/(\\d+)\\//, \"$1-\");\n}\n\nexport default ViewCounter;"]},"metadata":{},"sourceType":"module"}