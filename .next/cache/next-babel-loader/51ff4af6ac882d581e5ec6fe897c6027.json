{"ast":null,"code":"var _jsxFileName = \"/Users/christian/thoughts/src/components/ViewCounter.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport format from 'comma-number';\nimport { Flex } from '@chakra-ui/core';\nimport { realtimeDb } from '../lib/db';\n\nconst ViewCounter = ({\n  id\n}) => {\n  const {\n    0: views,\n    1: setViews\n  } = useState('');\n  useEffect(() => {\n    const onViews = newViews => setViews(newViews.val());\n\n    let db;\n\n    const fetchData = async () => {\n      db = await realtimeDb();\n      db.child(id).on('value', onViews);\n    };\n\n    fetchData();\n    return () => {\n      if (db) {\n        db.child(id).off('value', onViews);\n      }\n    };\n  }, [id]);\n  useEffect(() => {\n    const registerView = () => fetch(`.netlify/functions/increment-views?id=${encodeURIComponent(id)}`);\n\n    registerView();\n  }, [id]);\n  return __jsx(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }, \"`$\", views ? format(views) : '–––', \" views`\");\n};\n\nexport default ViewCounter;","map":{"version":3,"sources":["/Users/christian/thoughts/src/components/ViewCounter.tsx"],"names":["React","useState","useEffect","format","Flex","realtimeDb","ViewCounter","id","views","setViews","onViews","newViews","val","db","fetchData","child","on","off","registerView","fetch","encodeURIComponent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAUEC,IAVF,QAWO,iBAXP;AAcA,SAASC,UAAT,QAA2B,WAA3B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAC9B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,OAAO,GAAIC,QAAD,IAAcF,QAAQ,CAACE,QAAQ,CAACC,GAAT,EAAD,CAAtC;;AACA,QAAIC,EAAJ;;AAEA,UAAMC,SAAS,GAAG,YAAY;AAC5BD,MAAAA,EAAE,GAAG,MAAMR,UAAU,EAArB;AACAQ,MAAAA,EAAE,CAACE,KAAH,CAASR,EAAT,EAAaS,EAAb,CAAgB,OAAhB,EAAyBN,OAAzB;AACD,KAHD;;AAKAI,IAAAA,SAAS;AAET,WAAO,MAAM;AACX,UAAID,EAAJ,EAAQ;AACNA,QAAAA,EAAE,CAACE,KAAH,CAASR,EAAT,EAAaU,GAAb,CAAiB,OAAjB,EAA0BP,OAA1B;AACD;AACF,KAJD;AAKD,GAhBQ,EAgBN,CAACH,EAAD,CAhBM,CAAT;AAkBAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,YAAY,GAAG,MACnBC,KAAK,CAAE,yCAAwCC,kBAAkB,CAACb,EAAD,CAAK,EAAjE,CADP;;AAGAW,IAAAA,YAAY;AACb,GALQ,EAKN,CAACX,EAAD,CALM,CAAT;AAOA,SAAO,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASC,KAAK,GAAGL,MAAM,CAACK,KAAD,CAAT,GAAmB,KAAjC,YAAP;AACD,CA7BD;;AA+BA,eAAeF,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport format from 'comma-number';\nimport {\n  Heading,\n  InputGroup,\n  Box,\n  Input,\n  InputRightElement,\n  Button,\n  Text,\n  useToast,\n  useColorMode,\n  Flex\n} from '@chakra-ui/core';\n\n\nimport { realtimeDb } from '../lib/db';\n\nconst ViewCounter = ({ id }) => {\n  const [views, setViews] = useState('');\n\n  useEffect(() => {\n    const onViews = (newViews) => setViews(newViews.val());\n    let db;\n\n    const fetchData = async () => {\n      db = await realtimeDb();\n      db.child(id).on('value', onViews);\n    };\n\n    fetchData();\n\n    return () => {\n      if (db) {\n        db.child(id).off('value', onViews);\n      }\n    };\n  }, [id]);\n\n  useEffect(() => {\n    const registerView = () =>\n      fetch(`.netlify/functions/increment-views?id=${encodeURIComponent(id)}`);\n\n    registerView();\n  }, [id]);\n\n  return <Flex>`${views ? format(views) : '–––'} views`</Flex>;\n};\n\nexport default ViewCounter;"]},"metadata":{},"sourceType":"module"}