{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport format from 'comma-number';\nimport loadDb from '../lib/db';\n\nvar ViewCounter = function ViewCounter(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useState = useState(''),\n      views = _useState[0],\n      setViews = _useState[1];\n\n  useEffect(function () {\n    var onViews = function onViews(newViews) {\n      return setViews(newViews.val());\n    };\n\n    var db;\n\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return loadDb();\n\n              case 2:\n                db = _context.sent;\n                db.child(id).on('value', onViews);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n    return function () {\n      if (db) {\n        db.child(id).off('value', onViews);\n      }\n    };\n  }, [id]);\n  useEffect(function () {\n    var registerView = function registerView() {\n      return fetch(\"/api/increment-views?id=\".concat(encodeURIComponent(id)));\n    };\n\n    registerView();\n  }, [id]);\n  return \"\".concat(views ? format(views) : '–––', \" views\");\n};\n\n_s(ViewCounter, \"cK2j/pnJgDoPX06RFGKZ+JZjIqI=\");\n\n_c = ViewCounter;\nexport default ViewCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewCounter\");","map":{"version":3,"sources":["/Users/christian/thoughts/src/components/ViewCounter.js"],"names":["useState","useEffect","format","loadDb","ViewCounter","id","views","setViews","onViews","newViews","val","db","fetchData","child","on","off","registerView","fetch","encodeURIComponent"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAY;AAAA;;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACJL,QAAQ,CAAC,EAAD,CADJ;AAAA,MACvBM,KADuB;AAAA,MAChBC,QADgB;;AAG9BN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMO,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD;AAAA,aAAcF,QAAQ,CAACE,QAAQ,CAACC,GAAT,EAAD,CAAtB;AAAA,KAAhB;;AACA,QAAIC,EAAJ;;AAEA,QAAMC,SAAS;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACLT,MAAM,EADD;;AAAA;AAChBQ,gBAAAA,EADgB;AAEhBA,gBAAAA,EAAE,CAACE,KAAH,CAASR,EAAT,EAAaS,EAAb,CAAgB,OAAhB,EAAyBN,OAAzB;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATI,SAAS;AAAA;AAAA;AAAA,OAAf;;AAKAA,IAAAA,SAAS;AAET,WAAO,YAAM;AACX,UAAID,EAAJ,EAAQ;AACNA,QAAAA,EAAE,CAACE,KAAH,CAASR,EAAT,EAAaU,GAAb,CAAiB,OAAjB,EAA0BP,OAA1B;AACD;AACF,KAJD;AAKD,GAhBQ,EAgBN,CAACH,EAAD,CAhBM,CAAT;AAkBAJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMe,YAAY,GAAG,SAAfA,YAAe;AAAA,aACnBC,KAAK,mCAA4BC,kBAAkB,CAACb,EAAD,CAA9C,EADc;AAAA,KAArB;;AAGAW,IAAAA,YAAY;AACb,GALQ,EAKN,CAACX,EAAD,CALM,CAAT;AAOA,mBAAUC,KAAK,GAAGJ,MAAM,CAACI,KAAD,CAAT,GAAmB,KAAlC;AACD,CA7BD;;GAAMF,W;;KAAAA,W;AA+BN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport format from 'comma-number';\n\nimport loadDb from '../lib/db';\n\nconst ViewCounter = ({ id }) => {\n  const [views, setViews] = useState('');\n\n  useEffect(() => {\n    const onViews = (newViews) => setViews(newViews.val());\n    let db;\n\n    const fetchData = async () => {\n      db = await loadDb();\n      db.child(id).on('value', onViews);\n    };\n\n    fetchData();\n\n    return () => {\n      if (db) {\n        db.child(id).off('value', onViews);\n      }\n    };\n  }, [id]);\n\n  useEffect(() => {\n    const registerView = () =>\n      fetch(`/api/increment-views?id=${encodeURIComponent(id)}`);\n\n    registerView();\n  }, [id]);\n\n  return `${views ? format(views) : '–––'} views`;\n};\n\nexport default ViewCounter;"]},"metadata":{},"sourceType":"module"}