{"ast":null,"code":"var _jsxFileName = \"/Users/christian/thoughts/src/components/SubscribeAlt.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport { Heading, InputGroup, Box, Input, InputRightElement, Button, Text, useToast, useColorMode } from '@chakra-ui/core';\n\nconst SubscribeAlt = () => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const inputEl = useRef(null);\n  const toast = useToast();\n  const {\n    colorMode\n  } = useColorMode();\n  const bgColor = {\n    light: 'yellow.50',\n    dark: 'blue.400'\n  };\n  const borderColor = {\n    light: 'yellow.200',\n    dark: 'white.100'\n  };\n\n  const subscribe = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const res = await fetch('/.netlify/functions/subscribe', {\n      body: JSON.stringify({\n        email: inputEl.current.value\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    });\n    setLoading(false);\n    const {\n      error\n    } = await res.json();\n\n    if (error) {\n      toast({\n        title: 'An error occurred.',\n        description: error,\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n      return;\n    } // trackGoal('JYFUFMSF', 0);\n    // inputEl.current.value = '';\n\n\n    toast({\n      title: 'Success!',\n      description: 'You are now subscribed.',\n      status: 'success',\n      duration: 3000,\n      isClosable: true\n    });\n  };\n\n  return __jsx(Box, {\n    border: \"1px solid\",\n    borderColor: borderColor[colorMode],\n    bg: bgColor[colorMode],\n    borderRadius: 4,\n    padding: 6,\n    my: 4,\n    alignSelf: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(Heading, {\n    as: \"h5\",\n    size: \"lg\",\n    mb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Hey there!  Want better news in your letters?\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"This journal is just getting started and I'd love your support.\"), __jsx(InputGroup, {\n    size: \"md\",\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    \"aria-label\": \"Email for newsletter\",\n    placeholder: \"friend@gmail.com\",\n    ref: inputEl,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), __jsx(InputRightElement, {\n    width: \"6.75rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    isLoading: loading,\n    fontWeight: \"bold\",\n    h: \"1.75rem\",\n    size: \"sm\",\n    onClick: subscribe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Subscribe\"))), __jsx(Text, {\n    mt: 4,\n    fontStyle: \"i\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"P.S. I appreciate your support, it's the reason I keep writing!\"));\n};\n\nexport default SubscribeAlt;","map":{"version":3,"sources":["/Users/christian/thoughts/src/components/SubscribeAlt.tsx"],"names":["React","useState","useRef","Heading","InputGroup","Box","Input","InputRightElement","Button","Text","useToast","useColorMode","SubscribeAlt","loading","setLoading","inputEl","toast","colorMode","bgColor","light","dark","borderColor","subscribe","e","preventDefault","res","fetch","body","JSON","stringify","email","current","value","headers","method","error","json","title","description","status","duration","isClosable"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport {\n  Heading,\n  InputGroup,\n  Box,\n  Input,\n  InputRightElement,\n  Button,\n  Text,\n  useToast,\n  useColorMode\n} from '@chakra-ui/core';\n\nconst SubscribeAlt = () => {\n  const [loading, setLoading] = useState(false);\n  const inputEl = useRef(null);\n  const toast = useToast();\n  const { colorMode } = useColorMode();\n  const bgColor = {\n    light: 'yellow.50',\n    dark: 'blue.400'\n  };\n  const borderColor = {\n    light: 'yellow.200',\n    dark: 'white.100'\n  };\n\n  const subscribe = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const res = await fetch('/.netlify/functions/subscribe', {\n      body: JSON.stringify({\n        email: inputEl.current.value\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    });\n\n    setLoading(false);\n    const { error } = await res.json();\n\n    if (error) {\n      toast({\n        title: 'An error occurred.',\n        description: error,\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n\n      return;\n    }\n\n    // trackGoal('JYFUFMSF', 0);\n    // inputEl.current.value = '';\n    toast({\n      title: 'Success!',\n      description: 'You are now subscribed.',\n      status: 'success',\n      duration: 3000,\n      isClosable: true\n    });\n  };\n\n  return (\n    <Box\n      border=\"1px solid\"\n      borderColor={borderColor[colorMode]}\n      bg={bgColor[colorMode]}\n      borderRadius={4}\n      padding={6}\n      my={4}\n      alignSelf=\"center\"\n    >\n      <Heading as=\"h5\" size=\"lg\" mb={2}>\n        Hey there!  Want better news in your letters?\n      </Heading>\n      <Text>\n        This journal is just getting started and I'd love your support.\n      </Text>\n\n      <InputGroup size=\"md\" mt={4}>\n        <Input\n          aria-label=\"Email for newsletter\"\n          placeholder=\"friend@gmail.com\"\n          ref={inputEl}\n          type=\"email\"\n        />\n        <InputRightElement width=\"6.75rem\">\n          <Button\n            isLoading={loading}\n            fontWeight=\"bold\"\n            h=\"1.75rem\"\n            size=\"sm\"\n            onClick={subscribe}\n          >\n            Subscribe\n          </Button>\n        </InputRightElement>\n      </InputGroup>\n      <Text mt={4} fontStyle=\"i\">\n        P.S. I appreciate your support, it's the reason I keep writing!\n      </Text>\n    </Box>\n  );\n};\n\nexport default SubscribeAlt;"]},"metadata":{},"sourceType":"module"}