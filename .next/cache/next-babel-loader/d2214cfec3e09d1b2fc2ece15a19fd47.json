{"ast":null,"code":"var _jsxFileName = \"/Users/christian/thoughts/src/pages/posts/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../../components/Layout\";\nimport BasicMeta from \"../../components/meta/BasicMeta\";\nimport OpenGraphMeta from \"../../components/meta/OpenGraphMeta\";\nimport TwitterCardMeta from \"../../components/meta/TwitterCardMeta\";\nimport PostList from \"../../components/PostList\";\nimport config from \"../../lib/config\";\nimport { countPosts, listPostContent } from \"../../lib/posts\";\nimport { listTags } from \"../../lib/tags\";\nimport { Stack, Flex } from \"@chakra-ui/core\";\nexport default function Index({\n  posts,\n  tags,\n  pagination\n}) {\n  const url = \"/posts\";\n  const title = \"All posts\";\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(Stack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(BasicMeta, {\n    url: url,\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), __jsx(OpenGraphMeta, {\n    url: url,\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), __jsx(TwitterCardMeta, {\n    url: url,\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), __jsx(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(PostList, {\n    posts: posts,\n    tags: tags,\n    pagination: pagination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }))));\n}\nexport const getStaticProps = async () => {\n  const posts = listPostContent(1, config.posts_per_page);\n  const tags = listTags();\n  const pagination = {\n    current: 1,\n    pages: Math.ceil(countPosts() / config.posts_per_page)\n  };\n  return {\n    props: {\n      posts,\n      tags,\n      pagination\n    }\n  };\n};","map":{"version":3,"sources":["/Users/christian/thoughts/src/pages/posts/index.tsx"],"names":["Layout","BasicMeta","OpenGraphMeta","TwitterCardMeta","PostList","config","countPosts","listPostContent","listTags","Stack","Flex","Index","posts","tags","pagination","url","title","getStaticProps","posts_per_page","current","pages","Math","ceil","props"],"mappings":";;;AACA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,UAAT,EAAqBC,eAArB,QAAyD,iBAAzD;AACA,SAASC,QAAT,QAAqC,gBAArC;AAEA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,iBAA5B;AAUA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,CAAf,EAAmD;AAChE,QAAMC,GAAG,GAAG,QAAZ;AACA,QAAMC,KAAK,GAAG,WAAd;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,SAAD;AAAW,IAAA,GAAG,EAAED,GAAhB;AAAqB,IAAA,KAAK,EAAEC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,MAAC,aAAD;AAAe,IAAA,GAAG,EAAED,GAApB;AAAyB,IAAA,KAAK,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA,MAAC,eAAD;AAAiB,IAAA,GAAG,EAAED,GAAtB;AAA2B,IAAA,KAAK,EAAEC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,EAIA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,KAAjB;AAAwB,IAAA,IAAI,EAAEC,IAA9B;AAAoC,IAAA,UAAU,EAAEC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAJA,CADF,CADF;AAYD;AAED,OAAO,MAAMG,cAA8B,GAAG,YAAY;AACxD,QAAML,KAAK,GAAGL,eAAe,CAAC,CAAD,EAAIF,MAAM,CAACa,cAAX,CAA7B;AACA,QAAML,IAAI,GAAGL,QAAQ,EAArB;AACA,QAAMM,UAAU,GAAG;AACjBK,IAAAA,OAAO,EAAE,CADQ;AAEjBC,IAAAA,KAAK,EAAEC,IAAI,CAACC,IAAL,CAAUhB,UAAU,KAAKD,MAAM,CAACa,cAAhC;AAFU,GAAnB;AAIA,SAAO;AACLK,IAAAA,KAAK,EAAE;AACLX,MAAAA,KADK;AAELC,MAAAA,IAFK;AAGLC,MAAAA;AAHK;AADF,GAAP;AAOD,CAdM","sourcesContent":["import { GetStaticProps } from \"next\";\nimport Layout from \"../../components/Layout\";\nimport BasicMeta from \"../../components/meta/BasicMeta\";\nimport OpenGraphMeta from \"../../components/meta/OpenGraphMeta\";\nimport TwitterCardMeta from \"../../components/meta/TwitterCardMeta\";\nimport PostList from \"../../components/PostList\";\nimport config from \"../../lib/config\";\nimport { countPosts, listPostContent, PostContent } from \"../../lib/posts\";\nimport { listTags, TagContent } from \"../../lib/tags\";\nimport Head from \"next/head\";\nimport { Stack, Flex } from \"@chakra-ui/core\";\n\ntype Props = {\n  posts: PostContent[];\n  tags: TagContent[];\n  pagination: {\n    current: number;\n    pages: number;\n  };\n};\nexport default function Index({ posts, tags, pagination }: Props) {\n  const url = \"/posts\";\n  const title = \"All posts\";\n  return (\n    <Layout>\n      <Stack>\n      <BasicMeta url={url} title={title} />\n      <OpenGraphMeta url={url} title={title} />\n      <TwitterCardMeta url={url} title={title} />\n      <Flex>\n      <PostList posts={posts} tags={tags} pagination={pagination} />\n      </Flex>\n      </Stack>\n    </Layout>\n  );\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const posts = listPostContent(1, config.posts_per_page);\n  const tags = listTags();\n  const pagination = {\n    current: 1,\n    pages: Math.ceil(countPosts() / config.posts_per_page),\n  };\n  return {\n    props: {\n      posts,\n      tags,\n      pagination,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}